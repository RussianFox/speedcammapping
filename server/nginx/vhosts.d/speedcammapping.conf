
server {

    listen       443 ssl;
    ssl_certificate     /etc/letsencrypt/live/speedcammapping.lisss.website/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/speedcammapping.lisss.website/privkey.pem;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

# force https-redirects
    if ($scheme = 'http') {
	return 301 https://$host$request_uri;
    }

    listen       80;

    server_name  speedcammapping.lisss.website;

    #access_log  /var/log/nginx/speedcammapping.access.log  main;

    root   /srv/www/htdocs/speedcammapping/map;
    index  index.html index.htm;

    gzip on;
    gzip_types      text/plain application/xml application/json;
    gzip_min_length 1000;

    location ~ ^/(status|ping)$ {
	allow 127.0.0.1;
        #allow 1.2.3.4#your-ip;
        allow all;
        include fastcgi_params;
        fastcgi_pass unix:/var/run/php-fpm-speedcammapping.sock;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    }

    location ~ \.php$ {
	proxy_connect_timeout 159s;
	proxy_send_timeout   600;
    	proxy_read_timeout   600;
	fastcgi_send_timeout 1200s;
    	fastcgi_read_timeout 1200s;
        root   /srv/www/htdocs/speedcammapping/server/;
        fastcgi_pass unix:/var/run/php-fpm-speedcammapping.sock;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
        add_header X-Script $fastcgi_script_name;
        set $disable_cache 1;
	#if ($fastcgi_script_name ~ "/get.php$") {set $disable_cache 0;}
        fastcgi_cache_bypass $disable_cache;
        fastcgi_no_cache $disable_cache;
        #fastcgi_cache ROADSITUATION;
        fastcgi_cache_valid 200 1m;
        fastcgi_cache_key "$request_method$host$request_uri";
        proxy_cache_lock on;
        proxy_cache_lock_age 15;
        proxy_cache_use_stale timeout updating;
        fastcgi_buffering off;
    }

    location /kibana/ {
	auth_basic "Restricted Content";
	auth_basic_user_file /etc/nginx/auth/kibana.htpasswd;
	proxy_pass http://localhost:5601/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        #rewrite ^/kibana(/.*)$ $1 break;
        
    }
}
